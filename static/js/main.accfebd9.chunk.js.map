{"version":3,"sources":["GoodItem.js","Buttons.js","GoodList.js","App.js","index.js"],"names":["GoodItem","elements","map","element","key","Buttons","reverse","sortLength","sortAlph","reset","type","onClick","GoodList","maxLength","state","sortAlphOpposite","sortLengthOpposite","isHidden","props","defaultOptionValue","setState","sort","a","b","localeCompare","length","sortSelectLength","e","target","value","filter","this","selectOption","Array","fill","el","i","onChange","React","Component","goodsFromServer","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.accfebd9.chunk.js","sourcesContent":["import React from 'react';\n\nconst GoodItem = ({ elements }) => (\n  elements.map(element => (\n    <li key={element}>{element}</li>\n  ))\n);\n\nexport default GoodItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Buttons = ({ reverse, sortLength, sortAlph, reset }) => (\n  <>\n    <button\n      type=\"button\"\n      onClick={() => reverse()}\n    >\n      Reverse\n    </button>\n    <button\n      type=\"button\"\n      onClick={() => sortAlph()}\n    >\n      Sort Alph\n    </button>\n    <button\n      type=\"button\"\n      onClick={() => reset()}\n    >\n      Reset\n    </button>\n    <button\n      type=\"button\"\n      onClick={() => sortLength()}\n    >\n      Sort Length\n    </button>\n  </>\n);\n\nButtons.propTypes = {\n  reverse: PropTypes.func.isRequired,\n  sortLength: PropTypes.func.isRequired,\n  sortAlph: PropTypes.func.isRequired,\n  reset: PropTypes.func.isRequired,\n};\n\nexport default Buttons;\n","import React from 'react';\nimport PropTypes, { string } from 'prop-types';\nimport GoodItem from './GoodItem';\nimport Buttons from './Buttons';\n\nclass GoodList extends React.Component {\n  maxLength = 1;\n\n  state = {\n    sortAlphOpposite: false,\n    sortLengthOpposite: false,\n    isHidden: true,\n    elements: [...this.props.elements],\n    defaultOptionValue: 1,\n  }\n\n  reverse = () => {\n    this.setState(state => ({\n      elements: [...state.elements.reverse()],\n      sortAlphOpposite: !state.sortAlphOpposite,\n      sortLengthOpposite: !state.sortLengthOpposite,\n    }));\n  }\n\n  sortAlph = () => {\n    const { sortAlphOpposite } = this.state;\n\n    if (!sortAlphOpposite) {\n      this.setState(state => ({\n        elements: [...state.elements.sort((a, b) => a.localeCompare(b))],\n        sortAlphOpposite: !state.sortAlphOpposite,\n      }));\n    } else {\n      this.setState(state => ({\n        elements: [...state.elements.sort((a, b) => b.localeCompare(a))],\n        sortAlphOpposite: !state.sortAlphOpposite,\n      }));\n    }\n  }\n\n  reset = () => {\n    const { elements } = this.props;\n\n    this.setState(() => ({\n      elements: [...elements],\n      defaultOptionValue: 1,\n    }));\n  }\n\n  sortLength = () => {\n    const { sortLengthOpposite } = this.state;\n\n    if (!sortLengthOpposite) {\n      this.setState(state => ({\n        elements: [...state.elements.sort((a, b) => a.length - b.length)],\n        sortLengthOpposite: !state.sortLengthOpposite,\n      }));\n    } else {\n      this.setState(state => ({\n        elements: [...state.elements.sort((a, b) => b.length - a.length)],\n        sortLengthOpposite: !state.sortLengthOpposite,\n      }));\n    }\n  }\n\n  sortSelectLength = (e) => {\n    const { elements } = this.props;\n\n    this.maxLength = +e.target.value;\n\n    this.setState(() => ({\n      elements: elements.filter(element => (\n        element.length >= this.maxLength\n      )),\n      defaultOptionValue: this.maxLength,\n    }));\n  }\n\n  render() {\n    const { isHidden, elements, defaultOptionValue } = this.state;\n    const selectOption = new Array(10).fill(0).map((el, i) => i + 1);\n\n    return (\n      <div>\n        {isHidden && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              this.setState({ isHidden: false });\n            }}\n          >\n            Start\n          </button>\n        )}\n        {!isHidden && (\n          <>\n            <ul>\n              <GoodItem elements={elements} />\n            </ul>\n            <Buttons\n              reverse={this.reverse}\n              sortAlph={this.sortAlph}\n              reset={this.reset}\n              sortLength={this.sortLength}\n            />\n            <select\n              value={defaultOptionValue}\n              onChange={this.sortSelectLength}\n            >\n              {selectOption.map(value => (\n                <option value={value} key={value}>\n                  {value}\n                </option>\n              ))}\n            </select>\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nGoodList.propTypes = {\n  elements: PropTypes.arrayOf(string).isRequired,\n};\n\nexport default GoodList;\n","import React from 'react';\nimport './App.scss';\n\nimport GoodList from './GoodList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst App = () => (\n  <div className=\"App\">\n    <GoodList elements={goodsFromServer} />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}